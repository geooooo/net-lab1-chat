#
# Абстрактный класс протокола для чата
#
# Протокол:
#   Клиент и сервер могут посылать друг другу сообщения вида 'MSG data', где
#   MSG - тип сообщения
#   data - данные, передаваемые сообщением, причём data в некоторых случаях
#          должна быть обёрнута в ограничители (тогда обозначается ^data^)
#   ограничители - специальные символы, обозначающие начало и конец данных
#
# Типы сообщений:
#   От клиента:
#   * LOGIN ^dat^ - сообщение с просьбой установить соединение с сервером и
#                   ассоциировать пользователя с указанным логином
#   * QUIT - клиент закрывает соединение с сервером
#   * MESSAGE ^data^ - сообщение для отправки текста в чат
#   От сервера:
#   * LOGIN data - сообщение с ответом клиенту о попытке соединения, где
#                  data:
#                  * BAD - неправильный логин
#                  * EXIST - логин занят
#                  * OK - логин принят
#   * QUIT - сервер завершает свою работу
#   * MESSAGE ^data^ - сообщение для отправки текста в чат
#
# Сообщения, которые можно передавать клиенту и серверу
# по данному протоколу реализуются в виде методов экземляра
#
class ChatProtocol

protected

    # Ограничитель данных
    QUOTE = "\0"


    #
    # Обернуть данные в ограничители
    #
    def self.wrap_quote(data)
        "#{QUOTE}#{data}#{QUOTE}"
    end


    #
    # Сообщение логина
    #
    def login(data)
        raise NotImplementedError
    end


    #
    # Сообщение передачи текста в чат
    #
    def message(data)
        "MESSAGE #{wrap_quote(data)}"
    end


    #
    # Сообщение завершения работы или закрытия соединения
    #
    def quit
        "QUIT"
    end

end
